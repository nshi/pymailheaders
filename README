Pymailheaders
=============
Author: Neil Shi <zeegeek@users.sf.net>

Pymailheaders is a small X program which displays mail headers in your mail box.
It was innovated by xmailheaders, with a few more handy features like new mail
highlighting, lauching regardless of network connection status and
auto-reconnecting.  Pymailheaders was written from scratch in Python for
portability and easiness reasons.  IMAP4, POP3 protocols and XML feeds are
supported now.


INSTALL
=======

You do not need to install this program, just run pymailheaders.py with
appropriate arguments.


RUN
===

Pymailheaders will look for a configuration file called .pymailheadersrc in your
home directory unless you use command line argument '-c' to specify another file
explicitly.  If you have do not have a configuration file yet, Pymailheaders
will create one for you in your home directory.  If you already have one, you
can still use command line arguments to overwrite the options in the
configuration file.  If mandatory options like server type, server address, user
name and password are not provided in command line arguments nor in the
configuration file, Pymailheaders will tell you which options are missing.

Use 'pymailheaders.py -h' for full argument list.

Once you have your configuration file set up, you can just use the following
command to launch pymailheaders.

> pymailheaders.py

For IMAP4 mailboxes, you need to set server type as imap and provide server URL,
username and password.  If your server supports encrypted connection, you also
have to set the ssl option.  The following example establishes a secured
connection,

> pymailheaders.py -t imap -s express.cites.uiuc.edu -a -u zeegeek \
  -p classified -e -i 60

To use pymailheaders with POP3 mailbox, it is basically the same as doing it
with IMAP4 mailbox.  The only thing you need to change is server type.  For
example,

> pymailheaders.py -t pop -s express.cites.uiuc.edu -a -u zeegeek \
  -p classified -e -i 60

If you have a Gmail account and you want to check for new mails, just set server
type to feed and server to gmail.  Then you need to give your username and
password.  Here is an example,

> pymailheaders.py -t feed -s gmail -a -u zeegeek -p classified -i 60

You can also use pymailheaders to check for XML feeds in the formats of RSS 1.0,
2.0 and Atom 0.3, 1.0.  If your feed provider does not require authentication,
you do not need to provide username and password.  Example,

> pymailheaders.py -t feed -s http://feedparser.org/docs/examples/atom10.xml


HACK
====

XML feed support is powered by Mark Pilgrim's Universal Feed Parser.  It is
included in the package.